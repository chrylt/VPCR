#version 460
#extension GL_ARB_gpu_shader_int64 : enable
#extension GL_KHR_vulkan_glsl : enable
#include "common.glsl"

layout(set = 1, binding = 0, r32ui) writeonly uniform uimage2D renderTarget;
layout(set = 1, binding = 1, r32ui) writeonly uniform uimage2D depthBuffer;

layout(local_size_x = 1024) in;

void main()
{
    const ivec2 id = ivec2(gl_GlobalInvocationID.xy);
    if (id.x >= camera.resolution.x || id.y >= camera.resolution.y){
        return;
    }

    imageStore(renderTarget, id, uvec4(0));
    imageStore(depthBuffer, id, uvec4(0xFFFFFFFF)); // depth-test assumes maximum depth in empty depth-buffer for atomic-min-operation
}